* {
  margin: 0;
  padding: 0;
}
a,
h1,
h3 {
  font-family: "Courier Prime", monospace;
  font-weight: lighter;
}

p {
  font-family: "Gothic A1", sans-serif;
  padding: 0.5rem;
}

h4 {
  font-family: "Nanum Gothic", sans-serif;
  font-weight:400;
  padding-bottom: 0.3rem;
  font-size: 1.3rem;
}

a {
  text-decoration: none;
  color: darkgray;
}
nav a:hover {
  color: black;
  transition: ease-in 0.3s;
}

ul {
  padding: 0.5rem 2rem;
  display: grid;
  grid-template-rows: repeat(2, 30px);
  grid-template-columns: repeat(2, 300px);
}

li {
  text-align: left;
  list-style: none;
  display: inline;
}

.container {
  position: relative;
  margin: 0 30px;
  width: 100%;
  height: 80vh;
  text-align: center;
  /* overflow: hidden; */
}

.imgContainer{
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.imgContainer > div.buttons{
    display: flex;
    align-items: center;
}

.imgContainer > div.buttons > a > h2.demoVideo {
    margin: 1rem 0;
    background-color: black;
    color: white;
    width: 200px;
    text-align: center;
    padding: 0.5rem;
    border-radius: 20px;
    font-weight: lighter;
    margin-left: 1rem;
}

nav {
  padding: 1rem;
  position: fixed;
  display: inline-flex;
  justify-content: space-between;
  width: 87%;
  background-color: white;
  height: 50px;
  top: 40px;
  left: 5%;
  margin: 0 auto;
  z-index: 100;
}

nav > span {
  display: inline-flex;
}
nav > span > a {
  padding: 15px;
}

.wrapper {
  max-width: 900px;
  margin: auto;
  position: relative;
}

/*  header CSS */

.header {
  display: flex;
  align-items: center;
  margin: auto;
  width: 800px;
  height: 100vh;
}

.h_content {
  margin: auto;
}

.h_content > h3 {
  padding-top: 2rem;
}
.header h1 {
  top: 50%;
  margin: auto;
  font-size: 5rem;
  font-weight: bolder;
}

/* about CSS */

.about {
  margin: 10rem auto;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.contact{
    height: 80vh;
    margin: 0 0 20rem 0;
}

.about > .title {
  text-align: left;
  padding-bottom: 3rem;
}

.desc {
  width: 600px;
}
.profile_img_wrapper {
  margin: auto;
}

.desc > p {
  text-align: left;
  line-height: 23px;
  padding-left: 2rem;
}

.about > .content {
  display: flex;
  width: 850px;
}

.profile_img {
  width: 350px;
  border-radius: 10px;
}

.coding_content {
  display: inline-flex;
  flex-direction: column;
  width: 90%;
  justify-content: space-between;
}


.first_line {
  display: inline-flex;
  justify-content: center;
  padding-bottom: 5rem;
}

.coding_content i {
  font-size: 4rem;
  padding: 0.5rem 3rem;
}
.coding_content i:hover {
  color: firebrick;
  transition: 0.3s;
}

.coding_content h2 {
  padding-top: 1rem;
  font-weight: lighter;
  font-size: 1.3rem;
}

.contact_content {
  width: 850px;
  display: inline-flex;
  justify-content: space-around;
}


.contact_content span {
  display: inline-flex;
  align-items: center;
}
.contact_content i {
  font-size: 2rem;
  padding-right: 1rem;
  color: firebrick;
}
.contact_content h3 {
  padding-top: 2rem;
}

#contact {
  padding-top: 3rem;
}


div.careerSection> div.career_content{
    display: flex;
    flex-direction: column;
    margin-left: 2rem;
}



div.career p{
    margin:0rem;
    padding: 0.2rem 0.5rem;
}

div.career_content div.career > p.careerTitle{
    font-size: 1.2rem;
    font-weight: bolder;
}

div.career_content > div.career {
    width: 80%;
    text-align: left;
    margin-bottom:  4rem;
}

div.career > ul{
    margin-top: 1rem;
    display: flex;
    flex-direction: column;
    list-style-type: disc;
}

div.career > ul >li{
    text-decoration: dashed;
    font-weight: 400;
    list-style-type: disc;
    padding: 0.5rem 0;
}

/* .portfolio CSS */

.portfolio_content {
  display: inline-flex;
  width: 90%;
  justify-content: space-between;
}

div#portfolio > p.detailedInfo{
text-align: left;
padding-bottom: 2rem;
}

div._p a{
    color: black;
} 
div._p:hover  {
    cursor:pointer;
    /* background-color: red; */
}

.vf {
  width: 140px;
  background-color: rgb(97, 31, 158);
  border-radius: 100%;
}

.portfolio_content img {
  width: 180px;
  height: 180px;
  margin-bottom: 2rem;
}

.portfolio_content img:hover {
  width: 200px;
  height: 200px;
  transition: ease-in 0.3s;
}

.portfolio_content h3 {
  padding-top: 1rem;
}

#github {
  /* border: 1px solid black; */
  padding: 5px;
  color: lightslategray;
}

#github:hover {
  background-color: black;
  border-radius: 5px;
  color: white;
}

/* #github > a :hover {
  color: white;
} */

footer {
  display: inline-flex;
  width: 91%;
  justify-content: space-between;
  position: fixed;
  bottom: 40px;
  left: 40px;
  background-color: white;
  padding: 1rem;
}

footer i {
  font-size: 1.3rem;
  padding: 0 0.5rem;
}
footer a :hover {
  color: black;
}

footer h3 {
  font-size: 1rem;
}

.blank {
  width: 100%;
  height: 10vh;
}

.line {
  position: fixed;
  background-color: firebrick;
  z-index: 100;
}

.bottom {
  width: 100%;
  height: 40px;
  bottom: 0;
  left: 0;
}
.top {
  left: 0;
  top: 0;
  width: 100%;
  height: 40px;
}
.left {
  height: 200%;
  width: 40px;
  left: 0;
  top: 0;
}
.right {
  right: 0;
  height: 200%;
  width: 40px;
  top: 0;
}

/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */

.glitch {
  position: relative;
  color: black;
  font-size: 5em;
  letter-spacing: 0.5em;
  /* Animation provies a slight random skew. Check bottom of doc
  for more information on how to random skew. */
  animation: glitch-skew 1s infinite linear alternate-reverse;
}
.glitch::before {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: 2px;
  text-shadow: -2px 0 #ff00c1;

  /* Creates an initial clip for our glitch. This works in
  a typical top,right,bottom,left fashion and creates a mask
  to only show a certain part of the glitch at a time. */

  clip: rect(44px, 450px, 56px, 0);
  /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
  with an alternating animation to keep things fresh. */
  animation: glitch-anim 5s infinite linear alternate-reverse;
}

.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: -2px;
  text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
  animation: glitch-anim2 1s infinite linear alternate-reverse;
}

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  0% {
    clip: rect(28px, 9999px, 99px, 0);
    transform: skew(0.92deg);
  }
  5% {
    clip: rect(58px, 9999px, 79px, 0);
    transform: skew(0.16deg);
  }
  10% {
    clip: rect(72px, 9999px, 92px, 0);
    transform: skew(0.56deg);
  }
  15% {
    clip: rect(64px, 9999px, 19px, 0);
    transform: skew(0.3deg);
  }
  20% {
    clip: rect(30px, 9999px, 94px, 0);
    transform: skew(0.52deg);
  }
  25% {
    clip: rect(82px, 9999px, 58px, 0);
    transform: skew(0.9deg);
  }
  30% {
    clip: rect(34px, 9999px, 39px, 0);
    transform: skew(0.15deg);
  }
  35% {
    clip: rect(17px, 9999px, 74px, 0);
    transform: skew(1deg);
  }
  40% {
    clip: rect(4px, 9999px, 18px, 0);
    transform: skew(0.46deg);
  }
  45% {
    clip: rect(84px, 9999px, 93px, 0);
    transform: skew(0.28deg);
  }
  50% {
    clip: rect(96px, 9999px, 5px, 0);
    transform: skew(0.02deg);
  }
  55% {
    clip: rect(91px, 9999px, 13px, 0);
    transform: skew(0.44deg);
  }
  60% {
    clip: rect(57px, 9999px, 48px, 0);
    transform: skew(0.06deg);
  }
  65% {
    clip: rect(81px, 9999px, 100px, 0);
    transform: skew(0.08deg);
  }
  70% {
    clip: rect(77px, 9999px, 54px, 0);
    transform: skew(0.8deg);
  }
  75% {
    clip: rect(45px, 9999px, 97px, 0);
    transform: skew(0.99deg);
  }
  80% {
    clip: rect(10px, 9999px, 5px, 0);
    transform: skew(0.51deg);
  }
  85% {
    clip: rect(72px, 9999px, 65px, 0);
    transform: skew(0.4deg);
  }
  90% {
    clip: rect(66px, 9999px, 19px, 0);
    transform: skew(0.66deg);
  }
  95% {
    clip: rect(63px, 9999px, 34px, 0);
    transform: skew(0.5deg);
  }
  100% {
    clip: rect(33px, 9999px, 55px, 0);
    transform: skew(0.87deg);
  }
}
@keyframes glitch-anim2 {
  0% {
    clip: rect(91px, 9999px, 33px, 0);
    transform: skew(0.66deg);
  }
  5% {
    clip: rect(10px, 9999px, 41px, 0);
    transform: skew(0.23deg);
  }
  10% {
    clip: rect(73px, 9999px, 74px, 0);
    transform: skew(0.41deg);
  }
  15% {
    clip: rect(37px, 9999px, 27px, 0);
    transform: skew(0.77deg);
  }
  20% {
    clip: rect(12px, 9999px, 37px, 0);
    transform: skew(0.73deg);
  }
  25% {
    clip: rect(7px, 9999px, 83px, 0);
    transform: skew(0.36deg);
  }
  30% {
    clip: rect(35px, 9999px, 69px, 0);
    transform: skew(0.86deg);
  }
  35% {
    clip: rect(2px, 9999px, 18px, 0);
    transform: skew(0.77deg);
  }
  40% {
    clip: rect(22px, 9999px, 50px, 0);
    transform: skew(0.11deg);
  }
  45% {
    clip: rect(93px, 9999px, 26px, 0);
    transform: skew(0.74deg);
  }
  50% {
    clip: rect(43px, 9999px, 54px, 0);
    transform: skew(0.69deg);
  }
  55% {
    clip: rect(68px, 9999px, 23px, 0);
    transform: skew(0.48deg);
  }
  60% {
    clip: rect(62px, 9999px, 95px, 0);
    transform: skew(0.76deg);
  }
  65% {
    clip: rect(45px, 9999px, 54px, 0);
    transform: skew(0.97deg);
  }
  70% {
    clip: rect(20px, 9999px, 14px, 0);
    transform: skew(0.32deg);
  }
  75% {
    clip: rect(100px, 9999px, 83px, 0);
    transform: skew(0.71deg);
  }
  80% {
    clip: rect(79px, 9999px, 43px, 0);
    transform: skew(0.95deg);
  }
  85% {
    clip: rect(80px, 9999px, 90px, 0);
    transform: skew(0.58deg);
  }
  90% {
    clip: rect(17px, 9999px, 80px, 0);
    transform: skew(0.03deg);
  }
  95% {
    clip: rect(81px, 9999px, 17px, 0);
    transform: skew(0.94deg);
  }
  100% {
    clip: rect(35px, 9999px, 27px, 0);
    transform: skew(0.55deg);
  }
}
@keyframes glitch-skew {
  0% {
    transform: skew(-1deg);
  }
  10% {
    transform: skew(2deg);
  }
  20% {
    transform: skew(0deg);
  }
  30% {
    transform: skew(4deg);
  }
  40% {
    transform: skew(2deg);
  }
  50% {
    transform: skew(-2deg);
  }
  60% {
    transform: skew(1deg);
  }
  70% {
    transform: skew(-3deg);
  }
  80% {
    transform: skew(0deg);
  }
  90% {
    transform: skew(-3deg);
  }
  100% {
    transform: skew(-4deg);
  }
}
